# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

- name: Configure o ambiente Node.js
  usa: actions/setup-node@v2.4.0
  com:
    # Definir always-auth em npmrc
    always-auth: # opcional, o padrão é falso
    # Especificação de versão da versão a ser usada. Exemplos: 12.x, 10.15.1,> = 10.15.0
    versão do nó: # opcional
    # Arquitetura de destino para o Node usar. Exemplos: x86, x64. Irá usar a arquitetura do sistema por padrão.
    arquitetura: # opcional
    # Defina esta opção se quiser que a ação verifique a versão mais recente disponível que satisfaça a especificação da versão
    verificar mais recente: # opcional
    # Registro opcional para configurar para autenticação. Irá definir o registro em um arquivo de nível de projeto .npmrc e .yarnrc e configurar a autenticação para ler de env.NODE_AUTH_TOKEN
    url-registro: # opcional
    # Escopo opcional para autenticação em registros com escopo
    escopo: # opcional
    # Usado para obter distribuições de nós de versões de nós. Como há um padrão, ele normalmente não é fornecido pelo usuário.
    token: # opcional, o padrão é $ {{github.token}}
    # Usado para especificar um gerenciador de pacotes para armazenamento em cache no diretório padrão. Valores suportados: npm, yarn, pnpm
    cache: # opcional
    # Usado para especificar o caminho para um arquivo de dependência: package-lock.json, yarn.lock, etc. Suporta curingas ou uma lista de nomes de arquivo para armazenar em cache várias dependências.
    cache-dependency-path: # opcional
    # Descontinuada. Em vez disso, use a versão do nó. Não será mais compatível após 1º de outubro de 2019
    versão: # opcional
